<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redis_data_structures on beacon-docs</title>
    <link>https://unixvoid.com/redis_data_structures/index.xml</link>
    <description>Recent content in Redis_data_structures on beacon-docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license</copyright>
    <lastBuildDate>Wed, 09 Mar 2016 00:11:02 +0100</lastBuildDate>
    <atom:link href="https://unixvoid.com/redis_data_structures/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Redis Data Structures with beacon</title>
      <link>https://unixvoid.com/redis_data_structures/</link>
      <pubDate>Wed, 09 Mar 2016 00:11:02 +0100</pubDate>
      
      <guid>https://unixvoid.com/redis_data_structures/</guid>
      <description>&lt;p&gt;This is designed to help the user understand what is going on inside of redis at a low level.  The following are redis keys (with examples) and what they store.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;ip:&amp;lt;sha3:512 hashed id&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;br /&gt;
This entry is created only if a client has used the beacon-id to store an address
type: redis key
content: host ip
example &lt;code&gt;ip:bd98828400c404c3feaf&amp;lt;SNIP&amp;gt;&lt;/code&gt; 192.168.2.2&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;sec:&amp;lt;sha3:512 hashed id&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;br /&gt;
This entry is created once an id has been provisioned.
type: redis key
content: sha3:512 hash of security key
example &lt;code&gt;sec:bd98828400c404c3fea&amp;lt;SNIP&amp;gt;&lt;/code&gt; e7f8a5a8f35343d&lt;code&gt;&amp;lt;SNIP&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>